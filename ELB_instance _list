import boto3
import json
import sys

def instance_info(instance_id,i,elb_name):
   ec2 = boto3.client('ec2')
   instance = ec2.describe_instances(InstanceIds=[instance_id,],)
   for tag in instance["Reservations"][0]["Instances"][0]["Tags"]:
       if tag["Key"] == "Name":
           print elb_name+"\t"+str(i)+"\t"+tag["Value"]+"\t"+instance_id

def old_elb_info(elb_name):
   global client
   client = boto3.client('elb')
   response = client.describe_load_balancers(
   LoadBalancerNames=[elb_name,],)
   #print response['LoadBalancerDescriptions'][0]['Instances']
   #print "________________________________________"
   this_data = response['LoadBalancerDescriptions'][0]
   global instances
   instances=[]
   i=0
   #print this_data
   for uid in this_data['Instances']:
       instances.append(str(uid['InstanceId']))
       instance_info(uid['InstanceId'],i,elb_name)
       i=i+1


print sys.argv[1]
old_elb_info(sys.argv[1])

===================================================

Other code -

import boto3
import json
import sys

def registration(instance_list,old_elb,new_elb):
  for i in instance_list:
      #print instances[i]
      client = boto3.client('elb')
      deregister = client.deregister_instances_from_load_balancer(LoadBalancerName=old_elb,Instances=[{'InstanceId': i},])
      register = client.register_instances_with_load_balancer(LoadBalancerName=new_elb,Instances=[{'InstanceId': i},])

#print sys.argv[1]
list = sys.argv[1].split(",")
#print list
registration(list,sys.argv[2],sys.argv[3])
